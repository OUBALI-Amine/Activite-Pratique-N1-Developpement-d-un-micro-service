type Query{
    accountList : [BankAccount]
    bankAccountById (id : String) : BankAccount
    customerList : [Customer]
}

type BankAccount{
    id : String,
    createdAt : Float
    balance : Float
    currency :String
    type : String
    customer : Customer
}

type Customer {
    id : ID
    name : String
    bankAccounts : [BankAccount]
}

type Mutation{
    addAccount (bankAccount : BankAccountRequestDTO) : BankAccountResponseDTO
    updateAccount (id : String, bankAccount : BankAccountRequestDTO) : BankAccountResponseDTO
    deleteAccount (id : String) : Boolean
}

type BankAccountResponseDTO {
    id : String,
    createdAt : Float
    balance : Float
    currency :String
    type : String
}

input BankAccountRequestDTO {
    balance : Float
    currency :String
    type : String
}
